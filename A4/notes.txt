- style in html itself with ids
-



















function scatter_plot(data) {
        const svg = d3.select("#scatterPlot");
        const scatter_margin_top = 150;
        const scatter_margin_left = 100;

        const x_scale = d3.scaleBand()
            .domain(data.map(d => d.state))
            .range([0, width - m_left - m_right])
            .padding(pad);

        const y_scale = d3.scaleLinear()
            .domain([0, d3.max(data, d => d.d_num)])
            .range([height - scatter_margin_top - m_bottom, 0]);

        const scatter_g = svg.append("g")
            .attr("transform", `translate(${m_left}, ${scatter_margin_top})`);

        scatter_g.append("text")
            .attr("x", width / 2) 
            .attr("y", -20) 
            .attr("font-size", "20px")
            .attr("text-anchor", "middle")
            .text("Scatter Plot of Deaths due to Stroke (2017)");

        scatter_g.append("g")
            .call(d3.axisBottom(x_scale))
            .attr("transform", `translate(0, ${height - scatter_margin_top - m_bottom})`)
            .selectAll("text")
            .attr("transform", "rotate(-50)")
            .attr("text-anchor", "end");

        scatter_g.append("g")
            .call(d3.axisLeft(y_scale));

        scatter_g.selectAll(".dot")
            .data(data)
            .enter()
            .append("circle")
            .attr("class", "dot")
            .attr("cx", d => x_scale(d.state) + x_scale.bandwidth() / 2)
            .attr("cy", d => y_scale(d.d_num))
            .attr("r", 5)
            .attr("fill", "orange");
    }